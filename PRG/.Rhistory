ggplot(result_1st_imp, aes(x = Type, y = Total_score, fill = Type)) +
stat_summary(fun = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", position = position_dodge(0.9), width = 0.2) +
theme_minimal() +
labs(title = "Total First Impression Scores by Type",
x = "Type of Participant",
y = "Total Score") +
scale_fill_manual(
values = c("Patient" = "steelblue", "Healthy" = "orange"),
labels = c("Patient" = "ISZ - no label", "Healthy" = "HC - no label")
)
items = c("Sympathique", "Bizarre", "Intelligente", "Appreciable", "Confiance",
"Dominante", "Conversation", "Temps", "Voisin", "Assis")
result_1st_imp_2 = result_1st_imp_2 %>%
mutate(
Bizarre_inversed = 102 - Bizarre,
Total_score = Sympathique + Bizarre_inversed + Intelligente + Appreciable +
Confiance + Dominante + Conversation + Temps + Voisin + Assis
)
ggplot(result_1st_imp_2, aes(x = Type, y = Total_score, fill = Type)) +
stat_summary(fun = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", position = position_dodge(0.9), width = 0.2) +
theme_minimal() +
labs(title = "Total First Impression Scores by Type - ISZ label",
x = "Type of Participant",
y = "Total Score") +
scale_fill_manual(
values = c("Patient" = "lightblue", "Healthy" = "gold"),
labels = c("Patient" = "ISZ - label", "Healthy" = "HC - label")
)
items = c("Sympathique", "Bizarre", "Intelligente", "Appreciable", "Confiance",
"Dominante", "Conversation", "Temps", "Voisin", "Assis")
result_1st_imp_3 = result_1st_imp_3 %>%
mutate(
Bizarre_inversed = 102 - Bizarre,
Total_score = Sympathique + Bizarre_inversed + Intelligente + Appreciable +
Confiance + Dominante + Conversation + Temps + Voisin + Assis
)
ggplot(result_1st_imp_3, aes(x = Type, y = Total_score, fill = Type)) +
stat_summary(fun = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", position = position_dodge(0.9), width = 0.2) +
theme_minimal() +
labs(title = "Total First Impression Scores by Type - ASD label",
x = "Type of Participant",
y = "Total Score") +
scale_fill_manual(
values = c("Patient" = "turquoise4", "Healthy" = "tan"),
labels = c("Patient" = "ISZ - ASD label", "Healthy" = "HC - label")
)
result_1st_imp$Dataset = "Dataset_1"
result_1st_imp_2$Dataset = "Dataset_2"
result_1st_imp_3$Dataset = "Dataset_3"
combined_results = bind_rows(result_1st_imp, result_1st_imp_2, result_1st_imp_3)
combined_results$Interaction_Factor = factor(
interaction(combined_results$Type, combined_results$Dataset),
levels = c(
"Healthy.Dataset_1", "Patient.Dataset_1",
"Healthy.Dataset_2", "Patient.Dataset_2",
"Healthy.Dataset_3", "Patient.Dataset_3"
)
)
full_plot = ggplot(combined_results, aes(x = Dataset, y = Total_score, fill = Interaction_Factor)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", position = position_dodge(width = 0.9), width = 0.2) +
theme_minimal() +
labs(
title = "First Impression Scores",
x = "Experimental condition",
y = "Total Score"
) +
scale_fill_manual(
values = c(
"Healthy.Dataset_1" = "orange",
"Patient.Dataset_1" = "steelblue",
"Healthy.Dataset_2" = "gold",
"Patient.Dataset_2" = "lightblue",
"Healthy.Dataset_3" = "tan",
"Patient.Dataset_3" = "turquoise4"
),
labels = c(
"Healthy.Dataset_1" = "HC - no label",
"Patient.Dataset_1" = "ISZ - no label",
"Healthy.Dataset_2" = "HC - label",
"Patient.Dataset_2" = "ISZ - label",
"Healthy.Dataset_3" = "HC - label",
"Patient.Dataset_3" = "ISZ - ASD label"
),
name = "Group & Dataset"
) +
scale_x_discrete(
labels = c("Dataset_1" = "HC vs ISZ no label", "Dataset_2" = "HC vs ISZ with label", "Dataset_3" = "HC vs ISZ with ASD label")
)
full_plot
model = lmerTest::lmer(Total_score ~ interaction(Type, Dataset) + (1|CASE), data = combined_results)
summary(model)
emmeans_result = emmeans(model, ~ interaction(Type, Dataset), adjust = "Tukey", CIs = TRUE,
pbkrtest.limit = 4800, lmerTest.limit = 4800, lmer.df = "satterthwaite")
summary(emmeans_result)
post_hoc_comparisons = pairs(emmeans_result)
summary(post_hoc_comparisons)
ci_post_hoc = confint(post_hoc_comparisons)
model_df = as.data.frame(post_hoc_comparisons)
ci_df = as.data.frame(ci_post_hoc)
model_df$CI_lower = ci_df$lower.CL
model_df$CI_upper = ci_df$upper.CL
sigma_residual = car::sigmaHat(model)
model_df$d = model_df$estimate / sigma_residual
model_df$Contrast = paste(model_df$contrast)
final_results = model_df[, c("Contrast", "estimate", "p.value", "CI_lower", "CI_upper", "d")]
print(final_results)
result_1st_imp$source = "result_1st_imp"
result_1st_imp_2$source = "result_1st_imp_2"
combined_result = rbind(result_1st_imp, result_1st_imp_2)
correlation_data = combined_result %>%
dplyr::select(
Total_score,
stimuli_expressivity,
stimuli_exp_hor,
stimuli_exp_ver
)
au_columns = c("stimuli_AU01_r", "stimuli_AU02_r", "stimuli_AU04_r", "stimuli_AU05_r",
"stimuli_AU06_r", "stimuli_AU07_r", "stimuli_AU09_r", "stimuli_AU10_r",
"stimuli_AU12_r", "stimuli_AU14_r", "stimuli_AU15_r", "stimuli_AU17_r",
"stimuli_AU20_r", "stimuli_AU23_r", "stimuli_AU25_r", "stimuli_AU26_r",
"stimuli_AU45_r")
correlation_data = combined_result %>%
dplyr::select(Total_score, all_of(au_columns))
correlation_with_pvalue = function(x, y) {
test = cor.test(x, y, method = "pearson")
return(c(correlation = test$estimate, p_value = test$p.value))
}
results_movements = list()
for (col in colnames(correlation_data)[-1]) {
result = correlation_with_pvalue(correlation_data$Total_score, correlation_data[[col]])
if (result[2] < 0.05) {
results_movements[[col]] = list(correlation = result[1], p_value = result[2])
}
}
cat("Corrélations significatives avec Total_score:\n")
for (item in names(results_movements)) {
cat(paste(item, ":", "corrélation =", results_movements[[item]]$correlation,
", p-value =", results_movements[[item]]$p_value, "\n"))
}
# Quartile
for (item in names(results_movements)) {
plot_data = correlation_data %>%
dplyr::select(Total_score, all_of(item)) %>%
rename(variable_score = all_of(item)) %>%
mutate(variable_group = ntile(variable_score, 4)) %>%
group_by(variable_group) %>%
summarize(mean_total_score = mean(Total_score, na.rm = TRUE), .groups = "drop")
plot = ggplot(plot_data, aes(x = factor(variable_group), y = mean_total_score)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = paste("Mean Total Score by", item, "group (Quartiles)"),
x = paste(item, "groups (quartiles)"),
y = "Mean Total Score"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
coord_cartesian(ylim = c(300, 600))
print(plot)
}
# plot
for (item in names(results_movements)) {
plot_data = correlation_data %>%
dplyr::select(Total_score, all_of(item)) %>%
rename(variable_score = all_of(item))
plot = ggplot(plot_data, aes(x = variable_score, y = Total_score)) +
geom_point(alpha = 0.5, color = "steelblue") +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(
title = paste("Correlation between Total Score and", item),
x = item,
y = "Total Score"
) +
theme_minimal()
print(plot)
}
patient_data = combined_result %>%
dplyr::filter(Type == "Patient") %>%
dplyr::select(
Total_score,
stimuli_age,
stimuli_diagnostic,
stimuli_PANSS_tot,
stimuli_PANSS_pos,
stimuli_PANSS_neg,
stimuli_PANSS_gen,
stimuli_med
)
correlation_with_pvalue = function(x, y) {
test = cor.test(x, y, method = "pearson")
return(list(correlation = test$estimate, p_value = test$p.value))  # Retourne une liste
}
results_total_score = list()
results_other_items = list()
for (col in colnames(patient_data)[-1]) {
result = correlation_with_pvalue(patient_data$Total_score, patient_data[[col]])
if (result[2] < 0.05) {
results_total_score[[col]] = list(correlation = result[1], p_value = result[2])
}
}
cat("Corrélations significatives avec Total_score:\n")
for (item in names(results_total_score)) {
cat(paste(item, ":", "corrélation =", results_total_score[[item]]$correlation,
", p-value =", results_total_score[[item]]$p_value, "\n"))
}
if (length(results_total_score) > 0) {
for (variable in names(results_total_score)) {
p = ggplot(patient_data, aes_string(x = variable, y = "Total_score")) +
geom_point(color = "blue", alpha = 0.6) +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = paste("Régression de Total_score sur", variable),
x = variable,
y = "Total_score") +
theme_minimal()
print(p)
}
} else {
cat("Aucune variable n'est significativement corrélée avec Total_score.\n")
}
significant_vars = list()
for (col in colnames(patient_data)[-1]) {
result = correlation_with_pvalue(patient_data$Total_score, patient_data[[col]])
if (result$p_value < 0.05) {
significant_vars[[col]] = result
}
}
cat("Variables significativement corrélées avec Total_score:\n")
for (item in names(significant_vars)) {
cat(paste(item, ":", "corrélation =", significant_vars[[item]]$correlation,
", p-value =", significant_vars[[item]]$p_value, "\n"))
}
if (length(significant_vars) > 0) {
selected_vars = names(significant_vars)
patient_data_selected <- combined_result %>%
filter(Type == "Patient") %>%
select(all_of(selected_vars), stimuli_AU12_r, stimuli_AU25_r, stimuli_AU26_r)
correlation_matrix = matrix(NA, ncol = length(selected_vars), nrow = length(selected_vars),
dimnames = list(selected_vars, selected_vars))
p_value_matrix <- correlation_matrix
for (i in selected_vars) {
for (j in selected_vars) {
if (i != j) {
result = correlation_with_pvalue(patient_data_selected[[i]], patient_data_selected[[j]])
correlation_matrix[i, j] = result$correlation
p_value_matrix[i, j] = result$p_value
}
}
}
cat("\nMatrice des corrélations entre les variables significatives:\n")
print(correlation_matrix)
cat("\nMatrice des p-values entre les variables significatives:\n")
print(p_value_matrix)
au_vars = c("stimuli_AU12_r", "stimuli_AU25_r", "stimuli_AU26_r")
correlation_results_au = data.frame(Variable = character(), AU = character(),
Correlation = numeric(), P_Value = numeric(),
stringsAsFactors = FALSE)
for (var in selected_vars) {
for (au in au_vars) {
result = correlation_with_pvalue(patient_data_selected[[var]], patient_data_selected[[au]])
correlation_results_au = rbind(correlation_results_au,
data.frame(Variable = var, AU = au,
Correlation = result$correlation,
P_Value = result$p_value))
}
}
cat("\nCorrélations entre les variables significatives et AU12, AU25, AU26:\n")
print(correlation_results_au)
} else {
cat("\nAucune variable n'est significativement corrélée avec Total_score.\n")
}
au_vars = c("stimuli_AU12_r", "stimuli_AU25_r", "stimuli_AU26_r")
cat("\nGraphes de régression entre les variables significatives et AU12, AU25, AU26:\n")
for (var in selected_vars) {
for (au in au_vars) {
result = correlation_with_pvalue(patient_data_selected[[var]], patient_data_selected[[au]])
if (result$p_value < 0.05) {
p = ggplot(patient_data_selected, aes_string(x = var, y = au)) +
geom_point(color = "darkgreen", alpha = 0.6) +
geom_smooth(method = "lm", color = "red", se = FALSE) +
labs(title = paste("Régression de", au, "sur", var),
x = var,
y = au) +
theme_minimal()
print(p)
}
}
}
grouped_data = combined_result %>%
dplyr::filter(Type == "Patient") %>%
dplyr::mutate(
stimuli_med_group = cut(
stimuli_med,
breaks = seq(0, max(stimuli_med, na.rm = TRUE) + 30, by = 30),
include.lowest = TRUE,
right = FALSE
)
) %>%
dplyr::group_by(stimuli_med_group) %>%
dplyr::summarize(mean_total_score = mean(Total_score, na.rm = TRUE)) %>%
dplyr::ungroup()
barplot = ggplot(grouped_data, aes(x = stimuli_med_group, y = mean_total_score)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Mean Total Score by stimuli_med group (Patients only)",
x = "Chlorpromazine equivalent ranged by 50 (mg)",
y = "Mean Total Score"
) +
coord_cartesian(ylim = c(300, 600)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(barplot)
patient_data_PANSS = combined_result %>%
dplyr::filter(Type == "Patient") %>%
dplyr::select(
Total_score,
dplyr::starts_with("stimuli_PANSS_")
)
correlation_with_pvalue = function(x, y) {
test = cor.test(x, y, method = "pearson")
return(c(correlation = test$estimate, p_value = test$p.value))
}
results_total_score = list()
results_other_items = list()
for (col in colnames(patient_data_PANSS)[-1]) {
result = correlation_with_pvalue(patient_data_PANSS$Total_score, patient_data_PANSS[[col]])
if (result[2] < 0.05) {
results_total_score[[col]] = list(correlation = result[1], p_value = result[2])
}
}
cat("Corrélations significatives avec Total_score:\n")
for (item in names(results_total_score)) {
cat(paste(item, ":", "corrélation =", results_total_score[[item]]$correlation,
", p-value =", results_total_score[[item]]$p_value, "\n"))
}
for (item in names(results_total_score)) {
plot_data = patient_data_PANSS %>%
dplyr::select(Total_score, all_of(item)) %>%
rename(PANSS_score = all_of(item)) %>%
mutate(PANSS_group = as.factor(PANSS_score)) %>%
group_by(PANSS_group) %>%
summarize(mean_total_score = mean(Total_score, na.rm = TRUE), .groups = "drop")
plot = ggplot(plot_data, aes(x = PANSS_group, y = mean_total_score)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = paste("Mean Total Score by", item, "groups"),
x = paste(item, "groups (1 to 7)"),
y = "Mean Total Score"
) +
coord_cartesian(ylim = c(300, 600)) +  # Zoom sur l'axe des ordonnées
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(plot)
}
impressions_long_patient = result_1st_imp %>%
filter(Type == "Patient") %>%
pivot_longer(
cols = c(Sympathique, Bizarre, Intelligente, Appreciable, Confiance, Dominante, Conversation, Temps, Voisin, Assis),
names_to = "Impression",
values_to = "Score"
) %>%
mutate(Impression = case_when(
Impression == "Sympathique" ~ "Attractive",
Impression == "Bizarre" ~ "Awkward",
Impression == "Intelligente" ~ "Intelligent",
Impression == "Appreciable" ~ "Likeable",
Impression == "Confiance" ~ "Confident",
Impression == "Dominante" ~ "Dominant",
Impression == "Conversation" ~ "Conversation",
Impression == "Temps" ~ "Time",
Impression == "Voisin" ~ "Live Nearby",
Impression == "Assis" ~ "Seated",
TRUE ~ Impression
))
impressions_long_patient_2 = result_1st_imp_2 %>%
filter(Type == "Patient") %>%
pivot_longer(
cols = c(Sympathique, Bizarre, Intelligente, Appreciable, Confiance, Dominante, Conversation, Temps, Voisin, Assis),
names_to = "Impression",
values_to = "Score"
) %>%
mutate(Impression = case_when(
Impression == "Sympathique" ~ "Attractive",
Impression == "Bizarre" ~ "Awkward",
Impression == "Intelligente" ~ "Intelligent",
Impression == "Appreciable" ~ "Likeable",
Impression == "Confiance" ~ "Confident",
Impression == "Dominante" ~ "Dominant",
Impression == "Conversation" ~ "Conversation",
Impression == "Temps" ~ "Time",
Impression == "Voisin" ~ "Live Nearby",
Impression == "Assis" ~ "Seated",
TRUE ~ Impression
))
impressions_patient_combined = bind_rows(
impressions_long_patient %>% mutate(Dataset = "Dataset 1"),
impressions_long_patient_2 %>% mutate(Dataset = "Dataset 2")
)
item_plot= ggplot(impressions_patient_combined, aes(x = Impression, y = Score, fill = Dataset)) +
stat_summary(fun = mean, geom = "bar", position = "dodge") +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", position = position_dodge(0.9), width = 0.2) +
theme_minimal() +
labs(title = "Ratings of first impression for individuals with schizophrenia with and without diagnosis disclosure",
x = "First impression",
y = "Average score") +
scale_fill_manual(
values = c("Dataset 1" = "steelblue", "Dataset 2" = "lightblue"),
labels = c("Dataset 1" = "ISZ - no label", "Dataset 2" = "ISZ - with label")
) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(size = 10)
)
item_plot
setwd(RES_PATH)
ggsave("full_plot.png", plot = full_plot, width = 8, height = 6, dpi = 300)
ggsave("item_plot.png", plot = item_plot, width = 8, height = 6, dpi = 300)
result_1st_imp$Dataset = "Dataset_1"
result_1st_imp_2$Dataset = "Dataset_2"
result_1st_imp_3$Dataset = "Dataset_3"
combined_results = bind_rows(result_1st_imp, result_1st_imp_2, result_1st_imp_3)
combined_results$Interaction_Factor = factor(
interaction(combined_results$Type, combined_results$Dataset),
levels = c(
"Healthy.Dataset_1", "Patient.Dataset_1",
"Healthy.Dataset_2", "Patient.Dataset_2",
"Healthy.Dataset_3", "Patient.Dataset_3"
)
)
full_plot = ggplot(combined_results, aes(x = Dataset, y = Total_score, fill = Interaction_Factor)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", position = position_dodge(width = 0.9), width = 0.2) +
theme_minimal() +
labs(
title = "First Impression Scores",
x = "Experimental condition",
y = "Total Score"
) +
scale_fill_manual(
values = c(
"Healthy.Dataset_1" = "orange",
"Patient.Dataset_1" = "steelblue",
"Healthy.Dataset_2" = "gold",
"Patient.Dataset_2" = "lightblue",
"Healthy.Dataset_3" = "tan",
"Patient.Dataset_3" = "turquoise4"
),
labels = c(
"Healthy.Dataset_1" = "HC - no label",
"Patient.Dataset_1" = "ISZ - no label",
"Healthy.Dataset_2" = "HC - label",
"Patient.Dataset_2" = "ISZ - label",
"Healthy.Dataset_3" = "HC - label",
"Patient.Dataset_3" = "ISZ - ASD label"
),
name = "Group & Dataset"
) +
scale_x_discrete(
labels = c("Dataset_1" = "no label", "Dataset_2" = "with label", "Dataset_3" = "mislabeled with ASD label")
)
full_plot
setwd(RES_PATH)
ggsave("full_plot.png", plot = full_plot, width = 8, height = 6, dpi = 300)
ggsave("item_plot.png", plot = item_plot, width = 8, height = 6, dpi = 300)
result_1st_imp$Dataset = "Dataset_1"
result_1st_imp_2$Dataset = "Dataset_2"
result_1st_imp_3$Dataset = "Dataset_3"
combined_results = bind_rows(result_1st_imp, result_1st_imp_2, result_1st_imp_3)
combined_results$Interaction_Factor = factor(
interaction(combined_results$Type, combined_results$Dataset),
levels = c(
"Healthy.Dataset_1", "Patient.Dataset_1",
"Healthy.Dataset_2", "Patient.Dataset_2",
"Healthy.Dataset_3", "Patient.Dataset_3"
)
)
full_plot = ggplot(combined_results, aes(x = Dataset, y = Total_score, fill = Interaction_Factor)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 0.9)) +
stat_summary(fun.data = mean_cl_boot, geom = "errorbar", position = position_dodge(width = 0.9), width = 0.2) +
theme_minimal() +
labs(
title = "First Impression Scores",
x = "Experimental condition",
y = "Total Score"
) +
scale_fill_manual(
values = c(
"Healthy.Dataset_1" = "orange",
"Patient.Dataset_1" = "steelblue",
"Healthy.Dataset_2" = "gold",
"Patient.Dataset_2" = "lightblue",
"Healthy.Dataset_3" = "tan",
"Patient.Dataset_3" = "turquoise4"
),
labels = c(
"Healthy.Dataset_1" = "HC - no label",
"Patient.Dataset_1" = "ISZ - no label",
"Healthy.Dataset_2" = "HC - with label",
"Patient.Dataset_2" = "ISZ - with label",
"Healthy.Dataset_3" = "HC - with label",
"Patient.Dataset_3" = "ISZ - ASD label"
),
name = "Group & Dataset"
) +
scale_x_discrete(
labels = c("Dataset_1" = "no label", "Dataset_2" = "with label", "Dataset_3" = "mislabeled with ASD label")
)
full_plot
setwd(RES_PATH)
ggsave("full_plot.png", plot = full_plot, width = 8, height = 6, dpi = 300)
ggsave("item_plot.png", plot = item_plot, width = 8, height = 6, dpi = 300)
